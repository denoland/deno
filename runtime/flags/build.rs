// Copyright 2018-2025 the Deno authors. MIT license.

#![allow(clippy::disallowed_methods)]

mod rust_list;

use rust_list::UnstableFlagKind;
use rust_list::UNSTABLE_FLAGS;

fn main() {
  let crate_dir = std::path::PathBuf::from(env!("CARGO_MANIFEST_DIR"));

  let mut js_list = String::from(
    "// Copyright 2018-2025 the Deno authors. MIT license.

/**
 * Don't modify this file manually.
 *
 * This file is auto-generated by the build script, modify `rust_list.rs` instead.
 */

export const unstableIds = {
",
  );

  for flag in UNSTABLE_FLAGS {
    let camel = camel_case(flag.name);
    if matches!(flag.kind, UnstableFlagKind::Runtime) {
      js_list += &format!("  {}: {},\n", camel, flag.id);
    }
  }
  js_list += "};\n";

  std::fs::write(crate_dir.join("js_list.js"), js_list).unwrap();
}

fn camel_case(name: &str) -> String {
  let mut output = String::new();
  let mut upper = false;
  for c in name.chars() {
    if c == '-' {
      upper = true;
    } else if upper {
      upper = false;
      output.push(c.to_ascii_uppercase());
    } else {
      output.push(c);
    }
  }
  output
}
