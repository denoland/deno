Download http://localhost:4260/@denotest%2freserved-word-exports
Download http://localhost:4260/@denotest/reserved-word-exports/1.0.0.tgz
[Module: null prototype] {
  abstract: "abstract",
  arguments: "arguments",
  async: "async",
  await: "await",
  boolean: "boolean",
  break: "break",
  byte: "byte",
  case: "case",
  catch: "catch",
  char: "char",
  class: "class",
  const: "const",
  continue: "continue",
  debugger: "debugger",
  default: {
    abstract: "abstract",
    arguments: "arguments",
    async: "async",
    await: "await",
    boolean: "boolean",
    break: "break",
    byte: "byte",
    case: "case",
    catch: "catch",
    char: "char",
    class: "class",
    const: "const",
    continue: "continue",
    debugger: "debugger",
    default: "default",
    delete: "delete",
    do: "do",
    double: "double",
    else: "else",
    enum: "enum",
    eval: "eval",
    export: "export",
    extends: "extends",
    false: "false",
    final: "final",
    finally: "finally",
    float: "float",
    for: "for",
    function: "function",
    get: "get",
    goto: "goto",
    if: "if",
    implements: "implements",
    import: "import",
    in: "in",
    instanceof: "instanceof",
    int: "int",
    interface: "interface",
    let: "let",
    long: "long",
    mod: "mod",
    native: "native",
    new: "new",
    null: "null",
    package: "package",
    private: "private",
    protected: "protected",
    public: "public",
    return: "return",
    set: "set",
    short: "short",
    static: "static",
    super: "super",
    switch: "switch",
    synchronized: "synchronized",
    this: "this",
    throw: "throw",
    throws: "throws",
    transient: "transient",
    true: "true",
    try: "try",
    typeof: "typeof",
    var: "var",
    void: "void",
    volatile: "volatile",
    while: "while",
    with: "with",
    yield: "yield"
  },
  delete: "delete",
  do: "do",
  double: "double",
  else: "else",
  enum: "enum",
  eval: "eval",
  export: "export",
  extends: "extends",
  false: "false",
  final: "final",
  finally: "finally",
  float: "float",
  for: "for",
  function: "function",
  get: "get",
  goto: "goto",
  if: "if",
  implements: "implements",
  import: "import",
  in: "in",
  instanceof: "instanceof",
  int: "int",
  interface: "interface",
  let: "let",
  long: "long",
  mod: "mod",
  native: "native",
  new: "new",
  null: "null",
  package: "package",
  private: "private",
  protected: "protected",
  public: "public",
  return: "return",
  set: "set",
  short: "short",
  static: "static",
  super: "super",
  switch: "switch",
  synchronized: "synchronized",
  this: "this",
  throw: "throw",
  throws: "throws",
  transient: "transient",
  true: "true",
  try: "try",
  typeof: "typeof",
  var: "var",
  void: "void",
  volatile: "volatile",
  while: "while",
  with: "with",
  yield: "yield"
}
